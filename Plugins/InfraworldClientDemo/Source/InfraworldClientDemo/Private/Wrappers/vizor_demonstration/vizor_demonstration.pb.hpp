// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vizor_demonstration.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "vizor_demonstration.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace vizor_proto_demostration {
class HelloRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HelloRequest> {
} _HelloRequest_default_instance_;
class HelloResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HelloResponse> {
} _HelloResponse_default_instance_;
class ServerTimeRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ServerTimeRequest> {
} _ServerTimeRequest_default_instance_;
class ServerTimeResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ServerTimeResponse> {
} _ServerTimeResponse_default_instance_;

namespace protobuf_vizor_5fdemonstration_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTimeResponse, hours_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTimeResponse, minutes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTimeResponse, seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTimeResponse, timezone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTimeResponse, location_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(HelloRequest)},
  { 5, -1, sizeof(HelloResponse)},
  { 10, -1, sizeof(ServerTimeRequest)},
  { 14, -1, sizeof(ServerTimeResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_HelloRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HelloResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerTimeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerTimeResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "vizor_demonstration.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _HelloRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _HelloResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ServerTimeRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ServerTimeResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _HelloRequest_default_instance_.DefaultConstruct();
  _HelloResponse_default_instance_.DefaultConstruct();
  _ServerTimeRequest_default_instance_.DefaultConstruct();
  _ServerTimeResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031vizor_demonstration.proto\022\030vizor_proto"
      "_demostration\"\034\n\014HelloRequest\022\014\n\004name\030\001 "
      "\001(\t\" \n\rHelloResponse\022\017\n\007message\030\001 \001(\t\"\023\n"
      "\021ServerTimeRequest\"i\n\022ServerTimeResponse"
      "\022\r\n\005hours\030\002 \001(\r\022\017\n\007minutes\030\003 \001(\r\022\017\n\007seco"
      "nds\030\004 \001(\r\022\020\n\010timezone\030\005 \001(\t\022\020\n\010location\030"
      "\006 \001(\t2\325\001\n\014HelloService\022Z\n\005Hello\022&.vizor_"
      "proto_demostration.HelloRequest\032\'.vizor_"
      "proto_demostration.HelloResponse\"\000\022i\n\nSe"
      "rverTime\022+.vizor_proto_demostration.Serv"
      "erTimeRequest\032,.vizor_proto_demostration"
      ".ServerTimeResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 469);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vizor_demonstration.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_vizor_5fdemonstration_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloRequest::HelloRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vizor_5fdemonstration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vizor_proto_demostration.HelloRequest)
}
HelloRequest::HelloRequest(const HelloRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:vizor_proto_demostration.HelloRequest)
}

void HelloRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HelloRequest::~HelloRequest() {
  // @@protoc_insertion_point(destructor:vizor_proto_demostration.HelloRequest)
  SharedDtor();
}

void HelloRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloRequest::descriptor() {
  protobuf_vizor_5fdemonstration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vizor_5fdemonstration_2eproto::file_level_metadata[0].descriptor;
}

const HelloRequest& HelloRequest::default_instance() {
  protobuf_vizor_5fdemonstration_2eproto::InitDefaults();
  return *internal_default_instance();
}

HelloRequest* HelloRequest::New(::google::protobuf::Arena* arena) const {
  HelloRequest* n = new HelloRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vizor_proto_demostration.HelloRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HelloRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vizor_proto_demostration.HelloRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vizor_proto_demostration.HelloRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vizor_proto_demostration.HelloRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vizor_proto_demostration.HelloRequest)
  return false;
#undef DO_
}

void HelloRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vizor_proto_demostration.HelloRequest)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vizor_proto_demostration.HelloRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:vizor_proto_demostration.HelloRequest)
}

::google::protobuf::uint8* HelloRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vizor_proto_demostration.HelloRequest)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vizor_proto_demostration.HelloRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:vizor_proto_demostration.HelloRequest)
  return target;
}

size_t HelloRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vizor_proto_demostration.HelloRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vizor_proto_demostration.HelloRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vizor_proto_demostration.HelloRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vizor_proto_demostration.HelloRequest)
    MergeFrom(*source);
  }
}

void HelloRequest::MergeFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vizor_proto_demostration.HelloRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void HelloRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vizor_proto_demostration.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloRequest::CopyFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vizor_proto_demostration.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloRequest::IsInitialized() const {
  return true;
}

void HelloRequest::Swap(HelloRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloRequest::InternalSwap(HelloRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloRequest::GetMetadata() const {
  protobuf_vizor_5fdemonstration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vizor_5fdemonstration_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloRequest

// string name = 1;
void HelloRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HelloRequest::name() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.HelloRequest.name)
  return name_.GetNoArena();
}
void HelloRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.HelloRequest.name)
}
#if LANG_CXX11
void HelloRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizor_proto_demostration.HelloRequest.name)
}
#endif
void HelloRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizor_proto_demostration.HelloRequest.name)
}
void HelloRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizor_proto_demostration.HelloRequest.name)
}
::std::string* HelloRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:vizor_proto_demostration.HelloRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HelloRequest::release_name() {
  // @@protoc_insertion_point(field_release:vizor_proto_demostration.HelloRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HelloRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:vizor_proto_demostration.HelloRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloResponse::HelloResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vizor_5fdemonstration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vizor_proto_demostration.HelloResponse)
}
HelloResponse::HelloResponse(const HelloResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:vizor_proto_demostration.HelloResponse)
}

void HelloResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HelloResponse::~HelloResponse() {
  // @@protoc_insertion_point(destructor:vizor_proto_demostration.HelloResponse)
  SharedDtor();
}

void HelloResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloResponse::descriptor() {
  protobuf_vizor_5fdemonstration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vizor_5fdemonstration_2eproto::file_level_metadata[1].descriptor;
}

const HelloResponse& HelloResponse::default_instance() {
  protobuf_vizor_5fdemonstration_2eproto::InitDefaults();
  return *internal_default_instance();
}

HelloResponse* HelloResponse::New(::google::protobuf::Arena* arena) const {
  HelloResponse* n = new HelloResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:vizor_proto_demostration.HelloResponse)
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HelloResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vizor_proto_demostration.HelloResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vizor_proto_demostration.HelloResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vizor_proto_demostration.HelloResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vizor_proto_demostration.HelloResponse)
  return false;
#undef DO_
}

void HelloResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vizor_proto_demostration.HelloResponse)
  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vizor_proto_demostration.HelloResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:vizor_proto_demostration.HelloResponse)
}

::google::protobuf::uint8* HelloResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vizor_proto_demostration.HelloResponse)
  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vizor_proto_demostration.HelloResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:vizor_proto_demostration.HelloResponse)
  return target;
}

size_t HelloResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vizor_proto_demostration.HelloResponse)
  size_t total_size = 0;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vizor_proto_demostration.HelloResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vizor_proto_demostration.HelloResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vizor_proto_demostration.HelloResponse)
    MergeFrom(*source);
  }
}

void HelloResponse::MergeFrom(const HelloResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vizor_proto_demostration.HelloResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void HelloResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vizor_proto_demostration.HelloResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloResponse::CopyFrom(const HelloResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vizor_proto_demostration.HelloResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloResponse::IsInitialized() const {
  return true;
}

void HelloResponse::Swap(HelloResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloResponse::InternalSwap(HelloResponse* other) {
  message_.Swap(&other->message_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloResponse::GetMetadata() const {
  protobuf_vizor_5fdemonstration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vizor_5fdemonstration_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloResponse

// string message = 1;
void HelloResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HelloResponse::message() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.HelloResponse.message)
  return message_.GetNoArena();
}
void HelloResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.HelloResponse.message)
}
#if LANG_CXX11
void HelloResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizor_proto_demostration.HelloResponse.message)
}
#endif
void HelloResponse::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizor_proto_demostration.HelloResponse.message)
}
void HelloResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizor_proto_demostration.HelloResponse.message)
}
::std::string* HelloResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:vizor_proto_demostration.HelloResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HelloResponse::release_message() {
  // @@protoc_insertion_point(field_release:vizor_proto_demostration.HelloResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HelloResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:vizor_proto_demostration.HelloResponse.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerTimeRequest::ServerTimeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vizor_5fdemonstration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vizor_proto_demostration.ServerTimeRequest)
}
ServerTimeRequest::ServerTimeRequest(const ServerTimeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vizor_proto_demostration.ServerTimeRequest)
}

void ServerTimeRequest::SharedCtor() {
  _cached_size_ = 0;
}

ServerTimeRequest::~ServerTimeRequest() {
  // @@protoc_insertion_point(destructor:vizor_proto_demostration.ServerTimeRequest)
  SharedDtor();
}

void ServerTimeRequest::SharedDtor() {
}

void ServerTimeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerTimeRequest::descriptor() {
  protobuf_vizor_5fdemonstration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vizor_5fdemonstration_2eproto::file_level_metadata[2].descriptor;
}

const ServerTimeRequest& ServerTimeRequest::default_instance() {
  protobuf_vizor_5fdemonstration_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerTimeRequest* ServerTimeRequest::New(::google::protobuf::Arena* arena) const {
  ServerTimeRequest* n = new ServerTimeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerTimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vizor_proto_demostration.ServerTimeRequest)
}

bool ServerTimeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vizor_proto_demostration.ServerTimeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:vizor_proto_demostration.ServerTimeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vizor_proto_demostration.ServerTimeRequest)
  return false;
#undef DO_
}

void ServerTimeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vizor_proto_demostration.ServerTimeRequest)
  // @@protoc_insertion_point(serialize_end:vizor_proto_demostration.ServerTimeRequest)
}

::google::protobuf::uint8* ServerTimeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vizor_proto_demostration.ServerTimeRequest)
  // @@protoc_insertion_point(serialize_to_array_end:vizor_proto_demostration.ServerTimeRequest)
  return target;
}

size_t ServerTimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vizor_proto_demostration.ServerTimeRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerTimeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vizor_proto_demostration.ServerTimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerTimeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerTimeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vizor_proto_demostration.ServerTimeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vizor_proto_demostration.ServerTimeRequest)
    MergeFrom(*source);
  }
}

void ServerTimeRequest::MergeFrom(const ServerTimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vizor_proto_demostration.ServerTimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void ServerTimeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vizor_proto_demostration.ServerTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerTimeRequest::CopyFrom(const ServerTimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vizor_proto_demostration.ServerTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerTimeRequest::IsInitialized() const {
  return true;
}

void ServerTimeRequest::Swap(ServerTimeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerTimeRequest::InternalSwap(ServerTimeRequest* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerTimeRequest::GetMetadata() const {
  protobuf_vizor_5fdemonstration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vizor_5fdemonstration_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerTimeRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerTimeResponse::kHoursFieldNumber;
const int ServerTimeResponse::kMinutesFieldNumber;
const int ServerTimeResponse::kSecondsFieldNumber;
const int ServerTimeResponse::kTimezoneFieldNumber;
const int ServerTimeResponse::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerTimeResponse::ServerTimeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vizor_5fdemonstration_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vizor_proto_demostration.ServerTimeResponse)
}
ServerTimeResponse::ServerTimeResponse(const ServerTimeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.timezone().size() > 0) {
    timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  ::memcpy(&hours_, &from.hours_,
    reinterpret_cast<char*>(&seconds_) -
    reinterpret_cast<char*>(&hours_) + sizeof(seconds_));
  // @@protoc_insertion_point(copy_constructor:vizor_proto_demostration.ServerTimeResponse)
}

void ServerTimeResponse::SharedCtor() {
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hours_, 0, reinterpret_cast<char*>(&seconds_) -
    reinterpret_cast<char*>(&hours_) + sizeof(seconds_));
  _cached_size_ = 0;
}

ServerTimeResponse::~ServerTimeResponse() {
  // @@protoc_insertion_point(destructor:vizor_proto_demostration.ServerTimeResponse)
  SharedDtor();
}

void ServerTimeResponse::SharedDtor() {
  timezone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerTimeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerTimeResponse::descriptor() {
  protobuf_vizor_5fdemonstration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vizor_5fdemonstration_2eproto::file_level_metadata[3].descriptor;
}

const ServerTimeResponse& ServerTimeResponse::default_instance() {
  protobuf_vizor_5fdemonstration_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerTimeResponse* ServerTimeResponse::New(::google::protobuf::Arena* arena) const {
  ServerTimeResponse* n = new ServerTimeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerTimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:vizor_proto_demostration.ServerTimeResponse)
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hours_, 0, reinterpret_cast<char*>(&seconds_) -
    reinterpret_cast<char*>(&hours_) + sizeof(seconds_));
}

bool ServerTimeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vizor_proto_demostration.ServerTimeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 hours = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hours_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 minutes = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minutes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seconds = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string timezone = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timezone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timezone().data(), this->timezone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vizor_proto_demostration.ServerTimeResponse.timezone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vizor_proto_demostration.ServerTimeResponse.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vizor_proto_demostration.ServerTimeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vizor_proto_demostration.ServerTimeResponse)
  return false;
#undef DO_
}

void ServerTimeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vizor_proto_demostration.ServerTimeResponse)
  // uint32 hours = 2;
  if (this->hours() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hours(), output);
  }

  // uint32 minutes = 3;
  if (this->minutes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->minutes(), output);
  }

  // uint32 seconds = 4;
  if (this->seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->seconds(), output);
  }

  // string timezone = 5;
  if (this->timezone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timezone().data(), this->timezone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vizor_proto_demostration.ServerTimeResponse.timezone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->timezone(), output);
  }

  // string location = 6;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vizor_proto_demostration.ServerTimeResponse.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->location(), output);
  }

  // @@protoc_insertion_point(serialize_end:vizor_proto_demostration.ServerTimeResponse)
}

::google::protobuf::uint8* ServerTimeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vizor_proto_demostration.ServerTimeResponse)
  // uint32 hours = 2;
  if (this->hours() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hours(), target);
  }

  // uint32 minutes = 3;
  if (this->minutes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->minutes(), target);
  }

  // uint32 seconds = 4;
  if (this->seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->seconds(), target);
  }

  // string timezone = 5;
  if (this->timezone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timezone().data(), this->timezone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vizor_proto_demostration.ServerTimeResponse.timezone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->timezone(), target);
  }

  // string location = 6;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vizor_proto_demostration.ServerTimeResponse.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->location(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:vizor_proto_demostration.ServerTimeResponse)
  return target;
}

size_t ServerTimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vizor_proto_demostration.ServerTimeResponse)
  size_t total_size = 0;

  // string timezone = 5;
  if (this->timezone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timezone());
  }

  // string location = 6;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // uint32 hours = 2;
  if (this->hours() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hours());
  }

  // uint32 minutes = 3;
  if (this->minutes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minutes());
  }

  // uint32 seconds = 4;
  if (this->seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerTimeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vizor_proto_demostration.ServerTimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerTimeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerTimeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vizor_proto_demostration.ServerTimeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vizor_proto_demostration.ServerTimeResponse)
    MergeFrom(*source);
  }
}

void ServerTimeResponse::MergeFrom(const ServerTimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vizor_proto_demostration.ServerTimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.timezone().size() > 0) {

    timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.hours() != 0) {
    set_hours(from.hours());
  }
  if (from.minutes() != 0) {
    set_minutes(from.minutes());
  }
  if (from.seconds() != 0) {
    set_seconds(from.seconds());
  }
}

void ServerTimeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vizor_proto_demostration.ServerTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerTimeResponse::CopyFrom(const ServerTimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vizor_proto_demostration.ServerTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerTimeResponse::IsInitialized() const {
  return true;
}

void ServerTimeResponse::Swap(ServerTimeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerTimeResponse::InternalSwap(ServerTimeResponse* other) {
  timezone_.Swap(&other->timezone_);
  location_.Swap(&other->location_);
  std::swap(hours_, other->hours_);
  std::swap(minutes_, other->minutes_);
  std::swap(seconds_, other->seconds_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerTimeResponse::GetMetadata() const {
  protobuf_vizor_5fdemonstration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vizor_5fdemonstration_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerTimeResponse

// uint32 hours = 2;
void ServerTimeResponse::clear_hours() {
  hours_ = 0u;
}
::google::protobuf::uint32 ServerTimeResponse::hours() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.ServerTimeResponse.hours)
  return hours_;
}
void ServerTimeResponse::set_hours(::google::protobuf::uint32 value) {
  
  hours_ = value;
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.ServerTimeResponse.hours)
}

// uint32 minutes = 3;
void ServerTimeResponse::clear_minutes() {
  minutes_ = 0u;
}
::google::protobuf::uint32 ServerTimeResponse::minutes() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.ServerTimeResponse.minutes)
  return minutes_;
}
void ServerTimeResponse::set_minutes(::google::protobuf::uint32 value) {
  
  minutes_ = value;
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.ServerTimeResponse.minutes)
}

// uint32 seconds = 4;
void ServerTimeResponse::clear_seconds() {
  seconds_ = 0u;
}
::google::protobuf::uint32 ServerTimeResponse::seconds() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.ServerTimeResponse.seconds)
  return seconds_;
}
void ServerTimeResponse::set_seconds(::google::protobuf::uint32 value) {
  
  seconds_ = value;
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.ServerTimeResponse.seconds)
}

// string timezone = 5;
void ServerTimeResponse::clear_timezone() {
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerTimeResponse::timezone() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.ServerTimeResponse.timezone)
  return timezone_.GetNoArena();
}
void ServerTimeResponse::set_timezone(const ::std::string& value) {
  
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.ServerTimeResponse.timezone)
}
#if LANG_CXX11
void ServerTimeResponse::set_timezone(::std::string&& value) {
  
  timezone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizor_proto_demostration.ServerTimeResponse.timezone)
}
#endif
void ServerTimeResponse::set_timezone(const char* value) {
  
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizor_proto_demostration.ServerTimeResponse.timezone)
}
void ServerTimeResponse::set_timezone(const char* value, size_t size) {
  
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizor_proto_demostration.ServerTimeResponse.timezone)
}
::std::string* ServerTimeResponse::mutable_timezone() {
  
  // @@protoc_insertion_point(field_mutable:vizor_proto_demostration.ServerTimeResponse.timezone)
  return timezone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerTimeResponse::release_timezone() {
  // @@protoc_insertion_point(field_release:vizor_proto_demostration.ServerTimeResponse.timezone)
  
  return timezone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerTimeResponse::set_allocated_timezone(::std::string* timezone) {
  if (timezone != NULL) {
    
  } else {
    
  }
  timezone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timezone);
  // @@protoc_insertion_point(field_set_allocated:vizor_proto_demostration.ServerTimeResponse.timezone)
}

// string location = 6;
void ServerTimeResponse::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerTimeResponse::location() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.ServerTimeResponse.location)
  return location_.GetNoArena();
}
void ServerTimeResponse::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.ServerTimeResponse.location)
}
#if LANG_CXX11
void ServerTimeResponse::set_location(::std::string&& value) {
  
  location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizor_proto_demostration.ServerTimeResponse.location)
}
#endif
void ServerTimeResponse::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizor_proto_demostration.ServerTimeResponse.location)
}
void ServerTimeResponse::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizor_proto_demostration.ServerTimeResponse.location)
}
::std::string* ServerTimeResponse::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:vizor_proto_demostration.ServerTimeResponse.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerTimeResponse::release_location() {
  // @@protoc_insertion_point(field_release:vizor_proto_demostration.ServerTimeResponse.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerTimeResponse::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:vizor_proto_demostration.ServerTimeResponse.location)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace vizor_proto_demostration

// @@protoc_insertion_point(global_scope)
