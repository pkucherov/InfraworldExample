// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vizor_demonstration.proto

#ifndef PROTOBUF_vizor_5fdemonstration_2eproto__INCLUDED
#define PROTOBUF_vizor_5fdemonstration_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace vizor_proto_demostration {
class HelloRequest;
class HelloRequestDefaultTypeInternal;
extern HelloRequestDefaultTypeInternal _HelloRequest_default_instance_;
class HelloResponse;
class HelloResponseDefaultTypeInternal;
extern HelloResponseDefaultTypeInternal _HelloResponse_default_instance_;
class ServerTimeRequest;
class ServerTimeRequestDefaultTypeInternal;
extern ServerTimeRequestDefaultTypeInternal _ServerTimeRequest_default_instance_;
class ServerTimeResponse;
class ServerTimeResponseDefaultTypeInternal;
extern ServerTimeResponseDefaultTypeInternal _ServerTimeResponse_default_instance_;
}  // namespace vizor_proto_demostration

namespace vizor_proto_demostration {

namespace protobuf_vizor_5fdemonstration_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_vizor_5fdemonstration_2eproto

// ===================================================================

class HelloRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizor_proto_demostration.HelloRequest) */ {
 public:
  HelloRequest();
  virtual ~HelloRequest();

  HelloRequest(const HelloRequest& from);

  inline HelloRequest& operator=(const HelloRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloRequest& default_instance();

  static inline const HelloRequest* internal_default_instance() {
    return reinterpret_cast<const HelloRequest*>(
               &_HelloRequest_default_instance_);
  }

  void Swap(HelloRequest* other);

  // implements Message ----------------------------------------------

  inline HelloRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  HelloRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HelloRequest& from);
  void MergeFrom(const HelloRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HelloRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:vizor_proto_demostration.HelloRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct  protobuf_vizor_5fdemonstration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HelloResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizor_proto_demostration.HelloResponse) */ {
 public:
  HelloResponse();
  virtual ~HelloResponse();

  HelloResponse(const HelloResponse& from);

  inline HelloResponse& operator=(const HelloResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloResponse& default_instance();

  static inline const HelloResponse* internal_default_instance() {
    return reinterpret_cast<const HelloResponse*>(
               &_HelloResponse_default_instance_);
  }

  void Swap(HelloResponse* other);

  // implements Message ----------------------------------------------

  inline HelloResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  HelloResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HelloResponse& from);
  void MergeFrom(const HelloResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HelloResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:vizor_proto_demostration.HelloResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend struct  protobuf_vizor_5fdemonstration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerTimeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizor_proto_demostration.ServerTimeRequest) */ {
 public:
  ServerTimeRequest();
  virtual ~ServerTimeRequest();

  ServerTimeRequest(const ServerTimeRequest& from);

  inline ServerTimeRequest& operator=(const ServerTimeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerTimeRequest& default_instance();

  static inline const ServerTimeRequest* internal_default_instance() {
    return reinterpret_cast<const ServerTimeRequest*>(
               &_ServerTimeRequest_default_instance_);
  }

  void Swap(ServerTimeRequest* other);

  // implements Message ----------------------------------------------

  inline ServerTimeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerTimeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerTimeRequest& from);
  void MergeFrom(const ServerTimeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerTimeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:vizor_proto_demostration.ServerTimeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_vizor_5fdemonstration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerTimeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizor_proto_demostration.ServerTimeResponse) */ {
 public:
  ServerTimeResponse();
  virtual ~ServerTimeResponse();

  ServerTimeResponse(const ServerTimeResponse& from);

  inline ServerTimeResponse& operator=(const ServerTimeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerTimeResponse& default_instance();

  static inline const ServerTimeResponse* internal_default_instance() {
    return reinterpret_cast<const ServerTimeResponse*>(
               &_ServerTimeResponse_default_instance_);
  }

  void Swap(ServerTimeResponse* other);

  // implements Message ----------------------------------------------

  inline ServerTimeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerTimeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerTimeResponse& from);
  void MergeFrom(const ServerTimeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerTimeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string timezone = 5;
  void clear_timezone();
  static const int kTimezoneFieldNumber = 5;
  const ::std::string& timezone() const;
  void set_timezone(const ::std::string& value);
  #if LANG_CXX11
  void set_timezone(::std::string&& value);
  #endif
  void set_timezone(const char* value);
  void set_timezone(const char* value, size_t size);
  ::std::string* mutable_timezone();
  ::std::string* release_timezone();
  void set_allocated_timezone(::std::string* timezone);

  // string location = 6;
  void clear_location();
  static const int kLocationFieldNumber = 6;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  #if LANG_CXX11
  void set_location(::std::string&& value);
  #endif
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // uint32 hours = 2;
  void clear_hours();
  static const int kHoursFieldNumber = 2;
  ::google::protobuf::uint32 hours() const;
  void set_hours(::google::protobuf::uint32 value);

  // uint32 minutes = 3;
  void clear_minutes();
  static const int kMinutesFieldNumber = 3;
  ::google::protobuf::uint32 minutes() const;
  void set_minutes(::google::protobuf::uint32 value);

  // uint32 seconds = 4;
  void clear_seconds();
  static const int kSecondsFieldNumber = 4;
  ::google::protobuf::uint32 seconds() const;
  void set_seconds(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vizor_proto_demostration.ServerTimeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr timezone_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  ::google::protobuf::uint32 hours_;
  ::google::protobuf::uint32 minutes_;
  ::google::protobuf::uint32 seconds_;
  mutable int _cached_size_;
  friend struct  protobuf_vizor_5fdemonstration_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloRequest

// string name = 1;
inline void HelloRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloRequest::name() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.HelloRequest.name)
  return name_.GetNoArena();
}
inline void HelloRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.HelloRequest.name)
}
#if LANG_CXX11
inline void HelloRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizor_proto_demostration.HelloRequest.name)
}
#endif
inline void HelloRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizor_proto_demostration.HelloRequest.name)
}
inline void HelloRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizor_proto_demostration.HelloRequest.name)
}
inline ::std::string* HelloRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:vizor_proto_demostration.HelloRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloRequest::release_name() {
  // @@protoc_insertion_point(field_release:vizor_proto_demostration.HelloRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:vizor_proto_demostration.HelloRequest.name)
}

// -------------------------------------------------------------------

// HelloResponse

// string message = 1;
inline void HelloResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloResponse::message() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.HelloResponse.message)
  return message_.GetNoArena();
}
inline void HelloResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.HelloResponse.message)
}
#if LANG_CXX11
inline void HelloResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizor_proto_demostration.HelloResponse.message)
}
#endif
inline void HelloResponse::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizor_proto_demostration.HelloResponse.message)
}
inline void HelloResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizor_proto_demostration.HelloResponse.message)
}
inline ::std::string* HelloResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:vizor_proto_demostration.HelloResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloResponse::release_message() {
  // @@protoc_insertion_point(field_release:vizor_proto_demostration.HelloResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:vizor_proto_demostration.HelloResponse.message)
}

// -------------------------------------------------------------------

// ServerTimeRequest

// -------------------------------------------------------------------

// ServerTimeResponse

// uint32 hours = 2;
inline void ServerTimeResponse::clear_hours() {
  hours_ = 0u;
}
inline ::google::protobuf::uint32 ServerTimeResponse::hours() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.ServerTimeResponse.hours)
  return hours_;
}
inline void ServerTimeResponse::set_hours(::google::protobuf::uint32 value) {
  
  hours_ = value;
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.ServerTimeResponse.hours)
}

// uint32 minutes = 3;
inline void ServerTimeResponse::clear_minutes() {
  minutes_ = 0u;
}
inline ::google::protobuf::uint32 ServerTimeResponse::minutes() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.ServerTimeResponse.minutes)
  return minutes_;
}
inline void ServerTimeResponse::set_minutes(::google::protobuf::uint32 value) {
  
  minutes_ = value;
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.ServerTimeResponse.minutes)
}

// uint32 seconds = 4;
inline void ServerTimeResponse::clear_seconds() {
  seconds_ = 0u;
}
inline ::google::protobuf::uint32 ServerTimeResponse::seconds() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.ServerTimeResponse.seconds)
  return seconds_;
}
inline void ServerTimeResponse::set_seconds(::google::protobuf::uint32 value) {
  
  seconds_ = value;
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.ServerTimeResponse.seconds)
}

// string timezone = 5;
inline void ServerTimeResponse::clear_timezone() {
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerTimeResponse::timezone() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.ServerTimeResponse.timezone)
  return timezone_.GetNoArena();
}
inline void ServerTimeResponse::set_timezone(const ::std::string& value) {
  
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.ServerTimeResponse.timezone)
}
#if LANG_CXX11
inline void ServerTimeResponse::set_timezone(::std::string&& value) {
  
  timezone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizor_proto_demostration.ServerTimeResponse.timezone)
}
#endif
inline void ServerTimeResponse::set_timezone(const char* value) {
  
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizor_proto_demostration.ServerTimeResponse.timezone)
}
inline void ServerTimeResponse::set_timezone(const char* value, size_t size) {
  
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizor_proto_demostration.ServerTimeResponse.timezone)
}
inline ::std::string* ServerTimeResponse::mutable_timezone() {
  
  // @@protoc_insertion_point(field_mutable:vizor_proto_demostration.ServerTimeResponse.timezone)
  return timezone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerTimeResponse::release_timezone() {
  // @@protoc_insertion_point(field_release:vizor_proto_demostration.ServerTimeResponse.timezone)
  
  return timezone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerTimeResponse::set_allocated_timezone(::std::string* timezone) {
  if (timezone != NULL) {
    
  } else {
    
  }
  timezone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timezone);
  // @@protoc_insertion_point(field_set_allocated:vizor_proto_demostration.ServerTimeResponse.timezone)
}

// string location = 6;
inline void ServerTimeResponse::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerTimeResponse::location() const {
  // @@protoc_insertion_point(field_get:vizor_proto_demostration.ServerTimeResponse.location)
  return location_.GetNoArena();
}
inline void ServerTimeResponse::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizor_proto_demostration.ServerTimeResponse.location)
}
#if LANG_CXX11
inline void ServerTimeResponse::set_location(::std::string&& value) {
  
  location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizor_proto_demostration.ServerTimeResponse.location)
}
#endif
inline void ServerTimeResponse::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizor_proto_demostration.ServerTimeResponse.location)
}
inline void ServerTimeResponse::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizor_proto_demostration.ServerTimeResponse.location)
}
inline ::std::string* ServerTimeResponse::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:vizor_proto_demostration.ServerTimeResponse.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerTimeResponse::release_location() {
  // @@protoc_insertion_point(field_release:vizor_proto_demostration.ServerTimeResponse.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerTimeResponse::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:vizor_proto_demostration.ServerTimeResponse.location)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace vizor_proto_demostration

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vizor_5fdemonstration_2eproto__INCLUDED
